{"version":3,"sources":["webpack:///../gatsby-theme-replica/src/components/Article/ArticleContent.tsx","webpack:///../gatsby-theme-replica/src/components/Article/ArticleTitle.tsx","webpack:///../gatsby-theme-replica/src/components/Article/AuthorBar.tsx","webpack:///../gatsby-theme-replica/src/components/TableOfContent.tsx","webpack:///../gatsby-theme-replica/src/templates/post.tsx","webpack:///../gatsby-theme-replica/src/components/Tag.tsx"],"names":["ArticleContent","body","className","ArticleTitle","numericId","relativeDate","timeToRead","title","StyledBox","styled","div","color","blue","light","AuthorBar","dateTime","formattedDate","config","useConfig","src","avatar","width","author","size","TableOfContent","items","level","length","map","item","isTopLevelWithChildren","key","url","href","PostTemplate","data","pageContext","post","frontmatter","date","tags","category","tableOfContents","excerpt","prevPost","nextPost","slug","fields","getRelativeTimeFromNow","format","canonicalUrl","permalink","disqusConfig","useDisqus","Layout","Helmet","siteName","name","content","join","rel","to","CATEGORY_DIR","slugify","tag","Tag","count","TAG_DIR"],"mappings":"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","file":"component---gatsby-theme-replica-src-templates-post-tsx-04619ff3d0e30f2c64b0.js","sourcesContent":["import { MDXRenderer } from 'gatsby-plugin-mdx';\nimport React, { FC } from 'react';\n\nexport interface Props {\n  body: string;\n}\n\nconst ArticleContent: FC<Props> = ({ body }) => (\n  <article className={`border-b md:border md:rounded-b-md md:px-8 md:py-4`}>\n    <MDXRenderer>{body}</MDXRenderer>\n  </article>\n);\n\nexport default ArticleContent;\n","import React, { FC } from 'react';\n\ninterface Props {\n  title: string;\n  numericId: number;\n  relativeDate: string;\n  timeToRead: number;\n}\n\nconst ArticleTitle: FC<Props> = ({\n  numericId,\n  relativeDate,\n  timeToRead,\n  title,\n}) => {\n  return (\n    <div className={`w-full mb-4`}>\n      <h1 className={`text-2xl md:text-3xl mb-2`}>\n        {title} <span className={`text-gray-200`}>#{numericId}</span>\n      </h1>\n      <div className={`text-sm text-gray-main border-b md:mb-4 pb-4`}>\n        Posted {relativeDate} Â· {timeToRead} mins reading\n      </div>\n    </div>\n  );\n};\n\nexport default ArticleTitle;\n","import React, { FC } from 'react';\nimport { VscEllipsis, VscSmiley } from 'react-icons/vsc';\nimport styled from 'styled-components';\n\nimport useConfig from '../../hooks/useConfig';\nimport { color } from '../../theme';\n\nconst StyledBox = styled.div`\n  &:before {\n    content: ' ';\n    width: 10px;\n    height: 10px;\n    position: absolute;\n    border-left: 1px solid ${color.blue.light};\n    border-bottom: 1px solid ${color.blue.light};\n    background: ${color.blue[100]};\n    left: -5px;\n    transform: rotate(45deg);\n  }\n`;\n\ninterface Props {\n  dateTime: string;\n  formattedDate: string;\n}\n\nconst AuthorBar: FC<Props> = ({ dateTime, formattedDate }) => {\n  const config = useConfig();\n  return (\n    <StyledBox\n      className={`hidden md:flex items-center justify-between text-xs relative bg-blue-100 text-gray-main\n      border md:border-b-0 rounded-t-md border-blue-light py-2 px-4`}\n    >\n      <div className={`leading-6`}>\n        <img\n          src={config.avatar}\n          className={`inline md:hidden rounded-full mr-2`}\n          width={24}\n        />\n        <strong>{config.author}</strong> posted on{' '}\n        <time dateTime={dateTime} title={dateTime}>\n          {formattedDate}\n        </time>\n      </div>\n      <div className={`flex items-center`}>\n        <span\n          className={`border border-blue-light rounded-full px-2 py-px hidden md:block`}\n        >\n          <strong>Author</strong>\n        </span>\n        <VscSmiley size={18} className={`hidden md:block md:mx-4`} />\n        <VscEllipsis size={18} />\n      </div>\n    </StyledBox>\n  );\n};\n\nexport default AuthorBar;\n","import React, { FC } from 'react';\n\nimport { TocItem } from '../templates/post';\n\nconst TableOfContent: FC<{ items?: TocItem[]; level?: number }> = ({\n  items,\n  level = 0,\n}) => {\n  return items && items.length > 0 ? (\n    <ul className={`text-sm mb-2 ${level > 0 ? 'ml-5 list-circle' : ''}`}>\n      {items.map((item) => {\n        const isTopLevelWithChildren = level === 0 && item.items;\n        return (\n          <li key={item.url}>\n            <a\n              href={item.url}\n              className={isTopLevelWithChildren ? `text-base` : ''}\n            >\n              {item.title}\n            </a>\n            <TableOfContent items={item.items} level={level + 1} />\n          </li>\n        );\n      })}\n    </ul>\n  ) : null;\n};\n\nexport default TableOfContent;\n","import { graphql } from 'gatsby';\nimport { Link } from 'gatsby';\nimport { Disqus } from 'gatsby-plugin-disqus';\nimport React, { FC } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { FaRegFolderOpen } from 'react-icons/fa';\n\nimport ArticleContent from '../components/Article/ArticleContent';\nimport ArticleTitle from '../components/Article/ArticleTitle';\nimport AuthorBar from '../components/Article/AuthorBar';\nimport Layout from '../components/Layout';\nimport TableOfContent from '../components/TableOfContent';\nimport Tag from '../components/Tag';\nimport { CATEGORY_DIR } from '../constants/key';\nimport useConfig from '../hooks/useConfig';\nimport useDisqus from '../hooks/useDisqus';\nimport { PostNode } from '../types/post';\nimport { format, getRelativeTimeFromNow } from '../utils/date';\nimport { slugify } from '../utils/slugify';\n\nexport interface TocItem {\n  url: string;\n  title: string;\n  items?: TocItem[];\n}\n\ninterface RelatedPost {\n  slug: string;\n  title: string;\n}\ninterface Props {\n  pageContext: {\n    numericId: number;\n    prevPost?: RelatedPost;\n    nextPost?: RelatedPost;\n    permalink: string;\n  };\n  data: {\n    post: PostNode;\n  };\n}\n\nconst PostTemplate: FC<Props> = ({ data, pageContext }) => {\n  const config = useConfig();\n  const { title, date, tags, category } = data.post.frontmatter;\n  const { timeToRead, tableOfContents, body, excerpt } = data.post;\n  const { numericId, prevPost, nextPost } = pageContext;\n  const { slug } = data.post.fields;\n\n  const relativeDate = getRelativeTimeFromNow(date);\n  const formattedDate = format(date);\n  const canonicalUrl = pageContext.permalink;\n\n  const disqusConfig = useDisqus({\n    title,\n    date,\n    slug,\n  });\n\n  return (\n    <Layout>\n      <Helmet>\n        <title>\n          {title} - {config.siteName}\n        </title>\n        <meta name='description' content={excerpt} />\n        {tags && tags.length > 0 && (\n          <meta name='keywords' content={tags.join(',')} />\n        )}\n        <link rel='canonical' href={canonicalUrl} />\n      </Helmet>\n      <div className={`page-grid mt-4 md:px-8`}>\n        <ArticleTitle\n          title={title}\n          numericId={numericId}\n          relativeDate={relativeDate}\n          timeToRead={timeToRead}\n        />\n        <div className={`w-full md:w-9/12 md:pr-4 md:border-b-0 mb-4`}>\n          <div className={`relative`}>\n            <img\n              src={config.avatar}\n              className={`hidden md:block border rounded-full absolute`}\n              width={40}\n            />\n            <div className={`md:ml-14`}>\n              <AuthorBar dateTime={date} formattedDate={formattedDate} />\n              <ArticleContent body={body} />\n              {disqusConfig && <Disqus config={disqusConfig} />}\n            </div>\n          </div>\n          <div\n            className={`flex py-2 text-xs flex-wrap justify-between items-center ml:0 md:ml-14`}\n          >\n            {prevPost && (\n              <div>\n                <span className={`mr-1 text-gray-medium`}>â</span>\n                <Link to={prevPost.slug}> {prevPost.title}</Link>\n              </div>\n            )}\n            {nextPost && (\n              <div>\n                <Link to={nextPost.slug}>{nextPost.title}</Link>\n                <span className={`ml-1 text-gray-medium`}>â</span>\n              </div>\n            )}\n          </div>\n        </div>\n        <div className={`w-full md:w-3/12 md:pl-4`}>\n          <div className={`pb-4 border-b`}>\n            <h2 className={`mb-4 font-medium`}>About</h2>\n            {category && (\n              <Link\n                to={`/${CATEGORY_DIR}/${slugify(category)}`}\n                className={`flex items-center text-gray-medium hover:text-blue hover:no-underline mb-4`}\n              >\n                <FaRegFolderOpen />\n                <span className={`ml-3 text-sm`}>{category}</span>\n              </Link>\n            )}\n            {tags && tags.length > 0 && (\n              <div>{tags.map((tag) => tag && <Tag tag={tag} key={tag} />)}</div>\n            )}\n          </div>\n          {tableOfContents.items && (\n            <div className={`pb-4 border-b sticky top-0`}>\n              <h2 className={`my-4 font-medium`}>Table of Content</h2>\n              <TableOfContent items={tableOfContents.items} />\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query($postID: String!) {\n    post: mdx(id: { eq: $postID }) {\n      body\n      excerpt(pruneLength: 100)\n      fields {\n        slug\n      }\n      frontmatter {\n        date\n        title\n        tags\n        category\n      }\n      tableOfContents(maxDepth: 3)\n      timeToRead\n    }\n  }\n`;\n\nexport default PostTemplate;\n","import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { TAG_DIR } from '../constants/key';\nimport { slugify } from '../utils/slugify';\n\ninterface TagProps {\n  tag: string;\n  count?: number;\n}\n\nconst Tag: FC<TagProps> = ({ tag, count }) => {\n  const url = `/${TAG_DIR}/${slugify(tag)}`;\n  return (\n    <Link to={url} className={`topic-tag`}>\n      {tag} <span className={`font-semibold`}>{count}</span>\n    </Link>\n  );\n};\n\nexport default Tag;\n"],"sourceRoot":""}