{"version":3,"sources":["webpack:///../gatsby-theme-replica/src/components/PostList.tsx","webpack:///../gatsby-theme-replica/src/templates/tag.tsx","webpack:///../gatsby-theme-replica/src/components/Tag.tsx"],"names":["PostList","_ref","posts","React","createElement","map","post","_post$frontmatter","_post$frontmatter$tag","key","id","className","Link","to","fields","slug","frontmatter","title","excerpt","tags","tag","Tag","data-date","date","getDateString","FiStar","size","TagTemplate","pageContext","data","_data$allMdx","allMdx","totalCount","nodes","Layout","mode","LayoutMode","NavTab","count","url","TAG_DIR","slugify"],"mappings":"8FAAA,yEAgDeA,IApCa,SAAHC,GAAkB,IAAZC,EAAKD,EAALC,MAC7B,OACEC,IAAAC,cAAA,UACGF,aAAK,EAALA,EAAOG,KAAI,SAACC,GAAI,IAAAC,EAAAC,EAAA,OACfL,IAAAC,cAAA,MAAIK,IAAKH,EAAKI,GAAIC,UAAS,sBACzBR,IAAAC,cAAA,OAAKO,UAAU,WACbR,IAAAC,cAAA,MAAIO,UAAU,8BACZR,IAAAC,cAACQ,IAAI,CAACC,GAAIP,EAAKQ,OAAOC,MAAOT,EAAKU,YAAYC,MAAM,MAEtDd,IAAAC,cAAA,KAAGO,UAAU,+BAA+BL,EAAKY,SACjDf,IAAAC,cAAA,OAAKO,UAAS,QACK,QADIJ,EACpBD,EAAKU,mBAAW,IAAAT,GAAM,QAANC,EAAhBD,EAAkBY,YAAI,IAAAX,OAAN,EAAhBA,EAAwBH,KACvB,SAACe,GAAG,OAAKA,GAAOjB,IAAAC,cAACiB,IAAG,CAACD,IAAKA,EAAKX,IAAKW,QAGxCjB,IAAAC,cAAA,OAAKO,UAAU,0BAAyB,YAC5B,IACVR,IAAAC,cAAA,QAAMkB,YAAWhB,EAAKU,YAAYO,MAC/BC,YAAclB,EAAKU,YAAYO,SAItCpB,IAAAC,cAAA,OAAKO,UAAU,wCACbR,IAAAC,cAAA,OACEO,UAAS,mFAETR,IAAAC,cAACqB,IAAM,CAACC,KAAM,KACdvB,IAAAC,cAAA,QAAMO,UAAS,QAAU,iB,kCCtCvC,oEAyDegB,UAdgB,SAAH1B,GAA8B,IAAxB2B,EAAW3B,EAAX2B,YAAaC,EAAI5B,EAAJ4B,KACrCT,EAAQQ,EAARR,IACRU,EAAqCD,EAAKE,OAAlCC,EAAUF,EAAVE,WAAmB9B,EAAK4B,EAAZG,MACpB,OACE9B,IAAAC,cAAC8B,IAAM,CAACC,KAAMC,IAAWC,QACvBlC,IAAAC,cAAA,OAAKO,UAAS,yBACZR,IAAAC,cAAA,cAAS4B,GAAoB,QAAMA,EAAa,EAAI,IAAM,GAAG,UAAQ,IACrE7B,IAAAC,cAACiB,IAAG,CAACD,IAAKA,KAEZjB,IAAAC,cAACJ,IAAQ,CAACE,MAAOA,O,kCCrDvB,6DAoBemB,IATW,SAAHpB,GAAuB,IAAjBmB,EAAGnB,EAAHmB,IAAKkB,EAAKrC,EAALqC,MAC1BC,EAAM,IAAIC,UAAO,IAAIC,kBAAQrB,GACnC,OACEjB,IAAAC,cAACQ,IAAI,CAACC,GAAI0B,EAAK5B,UAAS,aACrBS,EAAI,IAACjB,IAAAC,cAAA,QAAMO,UAAS,iBAAoB2B","file":"component---gatsby-theme-replica-src-templates-tag-tsx-c273715bccb907a9e576.js","sourcesContent":["import { Link } from 'gatsby';\nimport React, { FC } from 'react';\nimport { FiStar } from 'react-icons/fi';\n\nimport { PostNode } from '../types/post';\nimport { getDateString } from '../utils/date';\nimport Tag from './Tag';\n\ninterface Props {\n  posts: PostNode[];\n}\n\nconst PostList: FC<Props> = ({ posts }) => {\n  return (\n    <ul>\n      {posts?.map((post) => (\n        <li key={post.id} className={`py-6 border-b flex`}>\n          <div className='w-10/12'>\n            <h3 className='mb-1 font-semibold text-lg'>\n              <Link to={post.fields.slug}>{post.frontmatter.title} </Link>\n            </h3>\n            <p className='my-2 text-sm text-gray-main'>{post.excerpt}</p>\n            <div className={`py-1`}>\n              {post.frontmatter?.tags?.map(\n                (tag) => tag && <Tag tag={tag} key={tag} />\n              )}\n            </div>\n            <div className='text-xs text-gray-main'>\n              Posted on{' '}\n              <time data-date={post.frontmatter.date}>\n                {getDateString(post.frontmatter.date)}\n              </time>\n            </div>\n          </div>\n          <div className='w-2/12 flex items-center justify-end'>\n            <div\n              className={`text-xs px-3 py-1 border bg-gray-100 rounded-md font-semibold flex items-center`}\n            >\n              <FiStar size={16} />\n              <span className={`pl-1`}>star</span>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PostList;\n","import { graphql } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport Layout, { LayoutMode } from '../components/Layout';\nimport PostList from '../components/PostList';\nimport Tag from '../components/Tag';\nimport { PostNode } from '../types/post';\n\nexport const query = graphql`\n  query TagPostsQuery($tag: String!) {\n    allMdx(\n      filter: { slug: { ne: \"README\" }, frontmatter: { tags: { eq: $tag } } }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 200)\n        frontmatter {\n          title\n          date\n          tags\n        }\n        fields {\n          slug\n        }\n        slug\n      }\n      totalCount\n    }\n  }\n`;\n\ninterface Props {\n  pageContext: {\n    tag: string;\n  };\n  data: {\n    allMdx: {\n      nodes: PostNode[];\n      totalCount: number;\n    };\n  };\n}\n\nconst TagTemplate: FC<Props> = ({ pageContext, data }) => {\n  const { tag } = pageContext;\n  const { totalCount, nodes: posts } = data.allMdx;\n  return (\n    <Layout mode={LayoutMode.NavTab}>\n      <div className={`text-sm border-b pb-4`}>\n        <strong>{totalCount}</strong> post{totalCount > 1 ? 's' : ''} in tag{' '}\n        <Tag tag={tag} />\n      </div>\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default TagTemplate;\n","import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { TAG_DIR } from '../constants/key';\nimport { slugify } from '../utils/slugify';\n\ninterface TagProps {\n  tag: string;\n  count?: number;\n}\n\nconst Tag: FC<TagProps> = ({ tag, count }) => {\n  const url = `/${TAG_DIR}/${slugify(tag)}`;\n  return (\n    <Link to={url} className={`topic-tag`}>\n      {tag} <span className={`font-semibold`}>{count}</span>\n    </Link>\n  );\n};\n\nexport default Tag;\n"],"sourceRoot":""}