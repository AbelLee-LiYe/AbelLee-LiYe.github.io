{"version":3,"sources":["webpack:///../gatsby-theme-replica/src/components/PostList.tsx","webpack:///../gatsby-theme-replica/src/templates/category.tsx","webpack:///../gatsby-theme-replica/src/components/Tag.tsx"],"names":["PostList","posts","map","post","key","id","className","to","fields","slug","frontmatter","title","excerpt","tags","tag","data-date","date","getDateString","size","CategoryTemplate","data","pageContext","allMdx","totalCount","nodes","category","mode","LayoutMode","NavTab","Tag","count","url","TAG_DIR","slugify"],"mappings":"8FAAA,yEAgDeA,IApCa,SAAC,GAAc,IAAZC,EAAY,EAAZA,MAC7B,OACE,4BACGA,aADH,EACGA,EAAOC,KAAI,SAACC,GAAD,eACV,wBAAIC,IAAKD,EAAKE,GAAIC,UAAS,sBACzB,yBAAKA,UAAU,WACb,wBAAIA,UAAU,8BACZ,kBAAC,IAAD,CAAMC,GAAIJ,EAAKK,OAAOC,MAAON,EAAKO,YAAYC,MAA9C,MAEF,uBAAGL,UAAU,+BAA+BH,EAAKS,SACjD,yBAAKN,UAAS,QAAd,UACGH,EAAKO,mBADR,iBACG,EAAkBG,YADrB,aACG,EAAwBX,KACvB,SAACY,GAAD,OAASA,GAAO,kBAAC,IAAD,CAAKA,IAAKA,EAAKV,IAAKU,QAGxC,yBAAKR,UAAU,0BAAf,YACY,IACV,0BAAMS,YAAWZ,EAAKO,YAAYM,MAC/BC,YAAcd,EAAKO,YAAYM,SAItC,yBAAKV,UAAU,wCACb,yBACEA,UAAS,mFAET,kBAAC,IAAD,CAAQY,KAAM,KACd,0BAAMZ,UAAS,QAAf,iB,kCCtCd,wDA2Dea,UAdqB,SAAC,GAA0B,IAAxBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC3C,EAAqCD,EAAKE,OAAlCC,EAAR,EAAQA,WAAmBtB,EAA3B,EAAoBuB,MACZC,EAAaJ,EAAbI,SACR,OACE,kBAAC,IAAD,CAAQC,KAAMC,IAAWC,QACvB,yBAAKtB,UAAS,yBACZ,gCAASiB,GADX,QACqCA,EAAa,EAAI,IAAM,GAD5D,gBAEW,gCAASE,GAAY,kBAEhC,kBAAC,IAAD,CAAUxB,MAAOA,O,kCCvDvB,6DAoBe4B,IATW,SAAC,GAAmB,IAAjBf,EAAiB,EAAjBA,IAAKgB,EAAY,EAAZA,MAC1BC,EAAM,IAAIC,UAAP,IAAkBC,kBAAQnB,GACnC,OACE,kBAAC,IAAD,CAAMP,GAAIwB,EAAKzB,UAAS,aACrBQ,EADH,IACQ,0BAAMR,UAAS,iBAAoBwB","file":"component---gatsby-theme-replica-src-templates-category-tsx-123a8039599d606fdc68.js","sourcesContent":["import { Link } from 'gatsby';\nimport React, { FC } from 'react';\nimport { FiStar } from 'react-icons/fi';\n\nimport { PostNode } from '../types/post';\nimport { getDateString } from '../utils/date';\nimport Tag from './Tag';\n\ninterface Props {\n  posts: PostNode[];\n}\n\nconst PostList: FC<Props> = ({ posts }) => {\n  return (\n    <ul>\n      {posts?.map((post) => (\n        <li key={post.id} className={`py-6 border-b flex`}>\n          <div className='w-10/12'>\n            <h3 className='mb-1 font-semibold text-lg'>\n              <Link to={post.fields.slug}>{post.frontmatter.title} </Link>\n            </h3>\n            <p className='my-2 text-sm text-gray-main'>{post.excerpt}</p>\n            <div className={`py-1`}>\n              {post.frontmatter?.tags?.map(\n                (tag) => tag && <Tag tag={tag} key={tag} />\n              )}\n            </div>\n            <div className='text-xs text-gray-main'>\n              Posted on{' '}\n              <time data-date={post.frontmatter.date}>\n                {getDateString(post.frontmatter.date)}\n              </time>\n            </div>\n          </div>\n          <div className='w-2/12 flex items-center justify-end'>\n            <div\n              className={`text-xs px-3 py-1 border bg-gray-100 rounded-md font-semibold flex items-center`}\n            >\n              <FiStar size={16} />\n              <span className={`pl-1`}>star</span>\n            </div>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default PostList;\n","import { graphql } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport Layout, { LayoutMode } from '../components/Layout';\nimport PostList from '../components/PostList';\nimport { PostNode } from '../types/post';\n\nexport const query = graphql`\n  query CategoryPostsQuery($category: String) {\n    allMdx(\n      filter: {\n        slug: { ne: \"README\" }\n        frontmatter: { category: { eq: $category } }\n      }\n      sort: { order: DESC, fields: frontmatter___date }\n    ) {\n      nodes {\n        id\n        excerpt(pruneLength: 200)\n        frontmatter {\n          title\n          date\n          tags\n        }\n        fields {\n          slug\n        }\n        slug\n      }\n      totalCount\n    }\n  }\n`;\n\ninterface Props {\n  pageContext: {\n    category: string;\n  };\n  data: {\n    allMdx: {\n      nodes: PostNode[];\n      totalCount: number;\n    };\n  };\n}\n\nconst CategoryTemplate: FC<Props> = ({ data, pageContext }) => {\n  const { totalCount, nodes: posts } = data.allMdx;\n  const { category } = pageContext;\n  return (\n    <Layout mode={LayoutMode.NavTab}>\n      <div className={`text-sm border-b pb-4`}>\n        <strong>{totalCount}</strong> post{totalCount > 1 ? 's' : ''} in\n        category <strong>{category || 'Uncategorized'}</strong>\n      </div>\n      <PostList posts={posts} />\n    </Layout>\n  );\n};\n\nexport default CategoryTemplate;\n","import { Link } from 'gatsby';\nimport React, { FC } from 'react';\n\nimport { TAG_DIR } from '../constants/key';\nimport { slugify } from '../utils/slugify';\n\ninterface TagProps {\n  tag: string;\n  count?: number;\n}\n\nconst Tag: FC<TagProps> = ({ tag, count }) => {\n  const url = `/${TAG_DIR}/${slugify(tag)}`;\n  return (\n    <Link to={url} className={`topic-tag`}>\n      {tag} <span className={`font-semibold`}>{count}</span>\n    </Link>\n  );\n};\n\nexport default Tag;\n"],"sourceRoot":""}